###### Python notlarım ####

PRİNT FONKSİYONLARI

print("wwww",".","gokhanaltay",".","com",sep="") #sep parametresi aralardaki bosluklara etki eder.
print("Pardus ve Ubuntu birer Linux dağılımıdır",end="...")#end parametresi sonuna etki eder.

dosya = open("deneme.txt","w")
print("Ben Python,Monty python!",file=dosya) # print e file parametresi ile dosyaya yazı yazdırma işlemi

dosya = open("kisisel_bilgiler.txt","w")
name = "Gökhan "
surname = "ALTAY"
age = 37
city = "Kocaeli"
work = "Formen"

print("İsim :  " + name,"Soy İsim :  " + surname,"Yaş :  " + str(age),"Şehir :  "+ city,"Meslek :  "+work,sep="\n",file=dosya),
Çıktısı AŞağıdaki gibi
İsim :  Gökhan 
Soy isim :  ALTAY
Yaş :  37
şehir :  Kocaeli
Meslek :  Formen

print(*"TBMM",sep=".")#Yıldızlı parametreler Çıktının T.B.M.M şeklinde vermesini sağlar.
print(*"GALATASARAY",sep="-")  G-A-L-A-T-A-S-A-R-A-Y şeklinde çıktı vermeye yarar.

Örnekler : 
baslik = "Türkiye'de Özgür Yazılımın Geçmişi"
print(baslik,"\n","-"*len(baslik),sep="")
Çıktısı  su şekilde olur:
Türkiye'de Özgür Yazılımın Geçmişi
----------------------------------
print(r"C:\yeniklasor\dosya.txt")  # Kaçış karakterleri işlenmez

##########################################################################################################################################################################################################################
VERİ TÜRLERİ
input () kullanıcıdan bir veri girmesini sağlar unutma kullanıcının girdiği her verinin tipi str yani metinseldir.
eğer aritmetik işlem yapacaksak tür dönüşümüne gideriz. int(input("Bir değer giriniz: " ) gibi
eval() fonksiyonu kendisine verilen karakter dizelerini değerlendirmeye tabi tutar. 
Not : eval() fonksiyonu basit olmasına karşın bir o kadar da tehlikelidir.icerisine python çalıştırma komutları da yasilanilir ve buda cok ciddi zararlara yol açabilir. Boyle bir durumla karşılaşmamak için eval () fonksiyonundan once kontrol mekanizması kullanılmalidir.

dict {"key":"value"} değerleri alir veri eşleştirme ve hızlı erişim için kullanılır.

tuple() demet yapısı olarak değişmesini istemediğiz değerleri içine alır.

set{} küme yapısıdır benzer olanlari ayiklar 
örnek bir listede olan iki aynı elemanları ayiklar.
sys.getsizeof() # bellekte ne kadar yer kapladıgını gösteren komut.Bunu kullanmak için import sys ile çağrılması gerekir.

##########################################################################################################################################################################################################################
KOŞUL DEYİMLERİ
if elif else komutları 

if n > 10: # if de her zaman girinti önemlidir. Yoksa kod hata verir.
    print("sayı 10'dan büyüktür!")

Konu hakkında örnek:
---------------------
kullanıcı_adı = input("Kullanıcı adınız: ")
parola = input("Parolanız : ")
toplam_uzunluk = len(kullanıcı_adı) + len(parola) #len burada içine yazılan değerin uzunluğunu verir.
mesaj = "Kullanıcı adı ve parolanız toplam {} karakterden oluşuyor!"
print(mesaj.format(toplam_uzunluk))
if toplam_uzunluk > 40:
    print("Kullanıcı adınız ile parolanızın ",
"toplam uzunluğu 40 karakteri geçmemeli!")
else:
    print("Sisteme hoşgeldiniz!")

##########################################################################################################################################################################################################################
TÜR DÖNÜŞÜMLERİ

Bir değerin veri tipini değiştirme işleminin adıdır.
Metinsel ifadeler tam sayıya dönüşemez.

ÖRn: 
-----
x = "7"
y= int(x) #burada stringi int veri tipine dönüştürdük. Metinsel ifadeler sayı şeklinde olursa sayısal veri tipine dönüşebilir. "7" gibi.

x = int(True) bool veri tipleri False 0 a True de 1 e dönüşür. Burada sonuc 1 çıkar.

x = float(6) # burada x 6.0 a dönüşür bunun tam tersi olacaksa float int dönecekse oda üste ve ya alta yuvarlar. 6.70 i 7 yapar 6.30 ise 6 yapar.

x= str(7) # Burada sonuc "7" dir.

complex() karmaşık sayıya çevirir.Tersinde ise hata verir complex int yada floata dönüştürülemez.
##################################################################################################################################################################
Random Modülü 
Rastgele sayılarla işlem yapmak için kullanılır . Kullanmak için import etmemiz gerekmektedir.

import random # Random modülünü kullanamak için import yapmamız gerekli.
random.seed(7) # Tekrarlabilir rastgele sayıları almak için kullanılır.
print(random.random()) 
print(random.random()) 
Yukarıda durumda sonuç Her zaman aşağıdaki gibi aynı değerleri döndürür.
0.32383276483316237
0.15084917392450192

Randomda getstate ve setstate kullanımı
----------------------------------------
Bu metotlar daha çok test similasyon ve tekrarlanabilir durumlar için kullanılır.

print(random.random()) # Rastgele bir sayı ürettik
state=random.getstate() # Aşağıdaki üretilecek sayıyı bu komut ile kopyaladık.
print(random.random()) #  Rastgele bir sayı daha  ürettik ve su an bu sayı hafıza da 
random.setstate(state) # Hafıza da olan rastgele sayıyı geri yüklemesini söyledik.
print(random.random())# Burada sonucu kopyladığımız sayıyı yazacak.
0.8599657178550767
0.9681039372419769
0.9681039372419769
------------------------------------------------------------------------------------------------------------------------------
print(random.getrandbits(8)) # 8 bitlik rastgele sayı üretir.
print(random.randrange(1,10,2))# 0 dan 9 a kadar rastgele sayı üretir 3. parametre olarak da atlama aralığını belirtir.
print(random.randint(1,10))# 1 den 9  a kadar rastgele sayı üretir.
------------------------------------------------------------------------------------------------------------------------------
my_list = ["Elma","armut",7,-5,45.5,"portakal"]
x = "deneme"
print(random.choice(my_list)) # içerisine verilen veriden rastgele değer döndürür. liste ve string verilerde dekullanılabilir.
print(random.choice(x))

my_list = ["Elma","armut","üzüm","portakal"]
print(random.choices(my_list,weights=[10,1,1,1],k=15)) # liste mi al ve weights içine yazılan değerlere göre ağırlık ve 15 kere yazdır.
Çıktısı :
['Elma', 'portakal', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma', 'Elma']
------------------------------------------------------------------------------------------------------------------------------
My_car = ["Renault","Bmw","Citroen","Mercedes"]
random.shuffle(My_car) #Listemizi rastgele kasrıştırdık. 
print(My_car)
------------------------------------------------------------------------------------------------------------------------------
print(random.sample(My_car,k=2))# listeden Rastgele 2 değer verir. Listenin elemanı kadar değer verilir.
print(random.random())# 0 ile 1 arası rastgele sayı üretir.
print(random.uniform(30,80)) # içerisine verilen değerler arasında ondalıklı sayı vermesini istedik
print(random.triangular(10,70,25))# değerler arası ondalık sayı verir farkı 3. yazılan parmetreyibaz alarak ona yakın değerler verir.
##################################################################################################################################################################
STRİNG METOTLARI

Stringler listeler gibi for döngüsüne , dilimleme gibi işlemlere tabi tutulabilirler.

isim = "Gökhan ALTAY"
my_list = []
for i in isim:
    my_list.append(i)
print(my_list)
------------------------------------------------------------------------------------------------------------------------------
my_string = "Python , Java ve C#  Ögreniyorum"
print(my_string.upper()) # Bütün harfleri büyük harfe çevirir.
print(my_string.lower()) # Bütün harfleri küçük harfe çevirir.
print(my_string.strip()) # Başta ki ve sondaki boşlukları kaldırır.
print(my_string.replace("P","p")) # İçerik değiştirme işlemini yapar.
print(my_string.split(",")) # içerisine verdiğin değerden sonrasını ayırır.

PYTHON , JAVA VE C#  ÖGRENIYORUM
python , java ve c#  ögreniyorum
Python , Java ve C#  Ögreniyorum
python , Java ve C#  Ögreniyorum
['Python ', ' Java ve C#  Ögreniyorum']
------------------------------------------------------------------------------------------------------------------------------
Kaçış Dizileri ve 	Anlamı
\\	Ters eğik çizgi (\)
\'	Tek tırnak işareti (')
\"	Çift tırnak işareti (")
\n	Yeni satır (newline)
\t	Sekme (tab)
\r	Satır başı (carriage return)
\b	Geri alma (backspace)
\f	Form feed
\a	Uyarı sesi (bell)
\v	Dikey sekme
\ooo	Sekizlik (octal) karakter değeri
\xhh	Onaltılık (hex) karakter değeri
\N{name}	Unicode karakter adı
\uXXXX	16-bit Unicode karakteri
\UXXXXXXXX	32-bit Unicode karakteri
------------------------------------------------------------------------------------------------------------------------------
String Formatlama işlemleri.

name = "Gökhan"
surname = "ALTAY"
age = 37

print("Merhaba adım {} soyadım {} yaşım {} dir...".format(name,surname,age))

name = "Gökhan"
surname = "ALTAY"
age = 37

print(f"Merhaba adım {name} soyadım {surname} yaşım {age} dir...")
